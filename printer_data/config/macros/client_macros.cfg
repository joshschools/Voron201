# Pause, Resume, and Cancel Macros (Mainsail/KlipperScreen compatible)

[pause_resume]

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos = True
variable_custom_park_x = 250.0
variable_custom_park_y = 5.0
variable_custom_park_dz = 20.0
variable_retract = 5.0
variable_cancel_retract = 5.0
variable_speed_retract = 35.0
variable_unretract = 15.0
variable_speed_unretract = 35.0
variable_speed_hop = 15.0
variable_speed_move = 300.0
variable_park_at_cancel = True
variable_park_at_cancel_x = None
variable_park_at_cancel_y = None
variable_use_fw_retract = True
#variable_runout_sensor = "filament_switch_sensor switch_sensor"
variable_user_cancel_macro = "TURN_OFF"
gcode = 

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode =
    # Client variables
    {% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
    {% set allow_park = client.park_at_cancel | default(false) | lower == 'true' %}
    {% set retract = client.cancel_retract | default(5.0) | abs %}
    
    # Custom park position
    {% set park_x = "" if (client.park_at_cancel_x | default(none) is none)
      else "X=" ~ client.park_at_cancel_x %}
    {% set park_y = "" if (client.park_at_cancel_y | default(none) is none)
      else "Y=" ~ client.park_at_cancel_y %}
    {% set custom_park = park_x | length > 0 or park_y | length > 0 %}
    
    # Restore idle timeout
    {% if printer['gcode_macro RESUME'].restore_idle_timeout > 0 %}
      SET_IDLE_TIMEOUT TIMEOUT={printer['gcode_macro RESUME'].restore_idle_timeout}
    {% endif %}
    {% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
    _CLIENT_RETRACT LENGTH={retract}
    TURN_OFF_HEATERS
    M106 S0
    {client.user_cancel_macro | default("")}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
    
    SET_PAUSE_NEXT_LAYER ENABLE=0
    SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode =
    # Client variables
    {% set client = printer['gcode_macro _CLIENT_VARIABLE'] | default({}) %}
    {% set idle_timeout = client.idle_timeout | default(0) %}
    {% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != '' else 0 %}
    {% set restore = False if printer.toolhead.extruder == ''
      else True  if params.RESTORE | default(1) | int == 1 else False %}
    
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{'restore': restore, 'temp': temp}}"
    
    # Set idle timeout
    {% if idle_timeout > 0 %}
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}
      SET_IDLE_TIMEOUT TIMEOUT={idle_timeout}
    {% endif %}
    PAUSE_BASE
    {client.user_pause_macro | default("")}
    _TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}