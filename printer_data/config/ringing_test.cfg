[ringing_test]
size: 100
#   X-Y Size of tower footprint (mm)
height: 60
#   Height of of tower (mm)
band: 5
#   Height for each ringing step (mm)
perimeters: 2
#   Number of perimeters to be printed for the tower
velocity: 80
#   Is the velocity one must use as V in a formula V * N / D when
#   calculating the resonance frequency. N and D are the number of
#   oscillations and the distance between them as usual:
brim_velocity: 30
#   Speed for brim printing in (mm/s)
accel_start: 1500
#   The acceleration of the start of the test
accel_step: 500
#   The increment of the acceleration every `band` (mm/s^2)
layer_height: 0.2
first_layer_height: 0.2
filament_diameter: 1.75

#   Parameters that are computed automatically, but may be adjusted if necessary

#center_x:
#   Center of the bed by default (if detected correctly)
#center_y:
#   Center of the bed by default (if detected correctly)
#brim_width:
#   Computed based on the model size, but may be increased

#   Parameters that are better left at their default values

#notch: 1
#   Size of the notch in mm
#notch_offset:
#   0.275 * size by default
#deceleration_points: 100

[ringing_test]

[delayed_gcode start_ringing_test]

gcode:
    {% set vars = printer["gcode_macro RUN_RINGING_TEST"] %}
    # Add your start GCode here, for example:
    M190 S{vars.bed_temp}
    M109 S{vars.hotend_temp}
    SET_FAN_SPEED FAN=Nevermore SPEED=1
    BED_MESH_CLEAR
    SET_GCODE_OFFSET Z=0
    STATUS_HEATING
    # If you have a chamber heater:
    # M141 S{chamber_temp}
#   G4 P60000       ; optional, let temps settle for 1 min
    G28 XY
    G28 Z METHOD=PROXIMITY CALIBRATE=1  ; calibrate z offset and beacon model hot
    G32                                 ; or QGL to balance towers
    BED_MESH_CALIBRATE RUNS=2           ; bed mesh in scan mode
    G28 Z METHOD=PROXIMITY CALIBRATE=0  ; calibrate z offset only after tilt/mesh
    SET_GCODE_OFFSET Z=0.06             ; add a little offset for hotend thermal expansion
      # Get ready to print by doing a primeline and updating the LEDs                                      # Set LEDs to printing-mode
    G0 X15 Y15 F10000                           # Go to starting point
    G0 Z0.2                                               # Raise Z to 0.4
    G91                                                   # Incremental positioning 
    G1 X200 E20 F1000                                     # Primeline
    G90                                                   # Absolute position


    {% set flow_percent = vars.flow_rate|float * 100.0 %}
    {% if flow_percent > 0 %}
    M221 S{flow_percent}
    {% endif %}
    {% set layer_height = vars.nozzle * 0.5 %}
    {% set first_layer_height = layer_height * 1.25 %}
    PRINT_RINGING_TOWER {vars.rawparams} LAYER_HEIGHT={layer_height} FIRST_LAYER_HEIGHT={first_layer_height} FINAL_GCODE_ID=end_ringing_test

[delayed_gcode end_ringing_test]
gcode:
    PRINT_END
    # Add your end GCode here, for example:
    # M104 S0 ; turn off temperature
    # M140 S0 ; turn off heatbed
    # M107 ; turn off fan
    # G91 ; relative positioning
    # G1 Z5 ; raise Z
    # G90 ; absolute positioning
    # G1 X0 Y200 ; present print
    # M84 ; disable steppers
    RESTORE_GCODE_STATE NAME=RINGING_TEST_STATE

[gcode_macro RUN_RINGING_TEST]
variable_bed_temp: -1
variable_hotend_temp: -1
variable_nozzle: -1
variable_flow_rate: -1
variable_rawparams: ''
gcode:
    # Fail early if the required parameters are not provided
    {% if params.NOZZLE is not defined %}
    {action_raise_error('NOZZLE= parameter must be provided')}
    {% endif %}
    {% if params.TARGET_TEMP is not defined %}
    {action_raise_error('TARGET_TEMP= parameter must be provided')}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=RUN_RINGING_TEST VARIABLE=bed_temp VALUE={params.BED_TEMP|default(60)}
    SET_GCODE_VARIABLE MACRO=RUN_RINGING_TEST VARIABLE=hotend_temp VALUE={params.TARGET_TEMP}
    SET_GCODE_VARIABLE MACRO=RUN_RINGING_TEST VARIABLE=nozzle VALUE={params.NOZZLE}
    SET_GCODE_VARIABLE MACRO=RUN_RINGING_TEST VARIABLE=flow_rate VALUE={params.FLOW_RATE|default(-1)}
    SET_GCODE_VARIABLE MACRO=RUN_RINGING_TEST VARIABLE=rawparams VALUE="'{rawparams}'"
    SAVE_GCODE_STATE NAME=RINGING_TEST_STATE
    UPDATE_DELAYED_GCODE ID=start_ringing_test DURATION=0.01